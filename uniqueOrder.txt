/* implement a function that takes an argument as a sequence and returns a list of items
without any identical elements adjacent to each other but preserving the order of appearance.

uniqueInOrder("AAAAABBBBCDDDDDDAAAAAAABBB") => ['A', 'B', 'C', 'D', 'A', 'B']

*/

// PSEUDOCODE **********************************************************

Inputs:
1. RAW_PATTERN (string)
Outputs:
2. UNIQUE_PATTERN (array)

set UNIQUE_PATTERN to an empty array
for each ELEMENT in RAW_PATTERN do
	if ELEMENT != ELEMENT - 1 index in RAW_PATTERN then
		add ELEMENT to UNIQUE_PATTERN
	endif
endfor
return UNIQUE_PATTERN

// JAVASCRIPT ***************************************************************

function uniqueInOrder(string){
    let sequenceArray = [string[0]];
    if (string == []){
        return([]);
    }
    for(i=1; i<string.length;i++){
        if (string[i] != string[i-1]){
            sequenceArray.push(string[i])
        }
    }
    return(sequenceArray);
}


let answer = uniqueInOrder([1,1,1,2,3,4,8,5,8,8,8,2,1]);
console.log(answer);